#log4j.appender:固定名称,表示这是一个appender配置 
#stdout:自定义命名,可以通过制定哪些地方使用这个配置
#log4j.rootLogger 是全局配置文件,也可以说默认配置,这里配置的是输出DEBUG以上的信息,输出位置到stdout这个appender
log4j.rootLogger=DEBUG,stdout

### 输出到控制台 ###
log4j.appender.stdout=org.apache.log4j.ConsoleAppender   
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout  
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] [%-5p]  %c {%F:%L} - %m%n
    
### 输出到日志文件 ###
log4j.appender.fileOut=org.apache.log4j.DailyRollingFileAppender 
log4j.appender.fileOut.File= e:\\work\\ssmdemo.log
!-log4j.appender.fileOut.File=e:\\work\\ssm4.log
log4j.appender.fileOut.Append=true
log4j.appender.fileOut.layout=org.apache.log4j.PatternLayout   
log4j.appender.fileOut.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] [%-5p]  %c {%F:%L} - %m%n 

#log4j.logger+包名:相当于局部配置
#这里全局配置为DEBUG输出到控制台 log4j.rootLogger=debug,stdout
#但是com.huiy.ssm 下面的debug级别以上的日志输出到fileOut,stdout
#局部配置优先级高于全局配置，比如局部是info，全局是debug，那么只显示info及以上类别的日志
#全局是info,局部是debug，那么显示debug及以上的
log4j.logger.org.springframework=error,fileOut,stdout
log4j.logger.org.apache.commons=error,fileOut,stdout
log4j.logger.net.sf.ehcache=error,fileOut,stdout
log4j.logger.org.apache.ibatis=error,fileOut,stdout
log4j.logger.org.mybatis.spring=error,fileOut,stdout
log4j.logger.com.huiy.ssm = WARN,fileOut,stdout

#　     %m 输出代码中指定的消息
#　　%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL
#　　%r 输出自应用启动到输出该log信息耗费的毫秒数
#　　%c 输出所属的类目，通常就是所在类的全名
#　　%t 输出产生该日志事件的线程名
#　　%n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n”
#　　%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921
#　　%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数

